{"remainingRequest":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\src\\Views\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\src\\Views\\App.vue","mtime":1626850555927},{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <main id=\"app\">\r\n    <!-- TopHead is the header with the information about the app -->\r\n    <TopHead>\r\n      <!-- Audio toggle (on the top right corner), used to toggle the audio output, default mode is defined in the settings -->\r\n      <!--<button\r\n        class=\"audio-toggle\"\r\n        :title=\"\r\n          muted\r\n            ? (translations[lang()] && translations[lang()].unMuteTitle) ||\r\n              translations[config.fallback_lang].unMuteTitle\r\n            : (translations[lang()] && translations[lang()].muteTitle) ||\r\n              translations[config.fallback_lang].muteTitle\r\n        \"\r\n        :aria-label=\"\r\n          muted\r\n            ? (translations[lang()] && translations[lang()].unMuteTitle) ||\r\n              translations[config.fallback_lang].unMuteTitle\r\n            : (translations[lang()] && translations[lang()].muteTitle) ||\r\n              translations[config.fallback_lang].muteTitle\r\n        \"\r\n        @click=\"muted = !muted\"\r\n      >\r\n        <i aria-hidden=\"true\" class=\"material-icons\">{{\r\n          muted ? \"volume_off\" : \"volume_up\"\r\n        }}</i>\r\n      </button>-->\r\n    </TopHead>\r\n\r\n    <section class=\"container chat-container\">\r\n      <Error v-if=\"error\" :error=\"error\" />\r\n\r\n      <RichComponent>\r\n        <Bubble\r\n          :text=\"'Test'\"\r\n        />\r\n      </RichComponent>\r\n      <!-- Messages Table -->\r\n      <section v-if=\"messages\" aria-live=\"polite\">\r\n        <div v-for=\"message in messages\" id=\"message\" :key=\"message.responseId\">\r\n          <!-- My message -->\r\n          <BubbleWrapper\r\n            ><Bubble\r\n              v-if=\"message.queryResult.queryText\"\r\n              :text=\"message.queryResult.queryText\"\r\n              me\r\n          /></BubbleWrapper>\r\n\r\n          <!-- Fulfillment text -->\r\n          <RichComponent>\r\n            <Bubble\r\n              v-if=\"message.queryResult.fulfillmentText\"\r\n              :text=\"message.queryResult.fulfillmentText\"\r\n            />\r\n          </RichComponent>\r\n\r\n          <!-- Dialogflow Components -->\r\n          <RichComponent\r\n            v-for=\"(component, component_id) in message.queryResult\r\n              .fulfillmentMessages\"\r\n            :key=\"component_id\"\r\n          >\r\n            <!-- ListSelect (https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#ListSelect) -->\r\n            <List\r\n              v-if=\"component.listSelect\"\r\n              :title=\"component.listSelect.title\"\r\n              :subtitle=\"component.listSelect.subtitle\"\r\n            >\r\n              <ListItem\r\n                v-for=\"item in component.listSelect.items\"\r\n                :key=\"item.info.key\"\r\n                :title=\"item.title\"\r\n                :description=\"item.description\"\r\n                :image-uri=\"item.image.imageUri\"\r\n                :image-title=\"item.image.accessibilityText\"\r\n                @click.native=\"send({ text: item.info.key })\"\r\n              />\r\n            </List>\r\n          </RichComponent>\r\n\r\n          <!-- Actions on Google Components -->\r\n          <section\r\n            v-if=\"\r\n              message.queryResult.webhookPayload &&\r\n              message.queryResult.webhookPayload.google\r\n            \"\r\n          >\r\n            <RichComponent\r\n              v-for=\"(component, component_id) in message.queryResult\r\n                .webhookPayload.google.richResponse.items\"\r\n              :key=\"component_id\"\r\n            >\r\n              <!-- List (https://developers.google.com/actions/assistant/responses#list) -->\r\n              <List\r\n                v-if=\"component.listSelect\"\r\n                :title=\"component.listSelect.title\"\r\n                :subtitle=\"component.listSelect.subtitle\"\r\n              >\r\n                <ListItem\r\n                  v-for=\"item in component.listSelect.items\"\r\n                  :key=\"item.info.key\"\r\n                  :title=\"item.title\"\r\n                  :description=\"item.description\"\r\n                  :image-uri=\"item.image.url\"\r\n                  :image-title=\"item.image.accessibilityText\"\r\n                  @click.native=\"send({ text: item.info.key })\"\r\n                />\r\n              </List>\r\n            </RichComponent>\r\n\r\n            <!-- Visual Selection Responses (https://developers.google.com/actions/assistant/responses#visual_selection_responses) -->\r\n            <RichComponent\r\n              v-for=\"(component, component_id) in message.queryResult\r\n                .webhookPayload.google.systemIntent\"\r\n              :key=\"component_id\"\r\n            >\r\n              <!-- List (https://developers.google.com/actions/assistant/responses#list) -->\r\n              <List\r\n                v-if=\"component.listSelect\"\r\n                :title=\"component.listSelect.title\"\r\n                :subtitle=\"component.listSelect.subtitle\"\r\n              >\r\n                <ListItem\r\n                  v-for=\"item in component.listSelect.items\"\r\n                  :key=\"item.optionInfo.key\"\r\n                  :title=\"item.title\"\r\n                  :description=\"item.description\"\r\n                  :image-uri=\"item.image.url\"\r\n                  :image-title=\"item.image.accessibilityText\"\r\n                  @click.native=\"send({ text: item.optionInfo.key })\"\r\n                />\r\n              </List>\r\n            </RichComponent>\r\n          </section>\r\n        </div>\r\n        <div v-if=\"loading\" id=\"message\">\r\n          <!-- My message (Loading) -->\r\n          <BubbleWrapper\r\n            ><Bubble me loading aria-hidden=\"true\"\r\n          /></BubbleWrapper>\r\n\r\n          <!-- Default / Webhook bubble (Loading) -->\r\n          <Bubble loading aria-hidden=\"true\" />\r\n        </div>\r\n      </section>\r\n    </section>\r\n\r\n    <!-- ChatInput is made for submitting queries and displaying suggestions -->\r\n    <ChatInput ref=\"input\" @submit=\"send\">\r\n      <!-- Suggestion chips\r\n                https://developers.google.com/actions/assistant/responses#suggestion_chips\r\n                https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#QuickReplies\r\n                https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#Suggestions\r\n            -->\r\n      <Suggestion\r\n        v-for=\"(suggestion, suggestion_id) in suggestions.text_suggestions\"\r\n        :key=\"suggestion_id\"\r\n        :title=\"suggestion\"\r\n        @click.native=\"send({ text: suggestion })\"\r\n      />\r\n\r\n      <!-- Link suggestion chips\r\n                https://developers.google.com/actions/assistant/responses#suggestion_chips\r\n                https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects.agent.intents#LinkOutSuggestion\r\n            -->\r\n      <Suggestion\r\n        v-if=\"suggestions.link_suggestion\"\r\n        :title=\"suggestions.link_suggestion.destinationName\"\r\n        :url=\"\r\n          suggestions.link_suggestion.uri || suggestions.link_suggestion.url\r\n        \"\r\n      />\r\n    </ChatInput>\r\n  </main>\r\n</template>\r\n\r\n<style lang=\"sass\">\r\n@import '@/Style/Theme.sass'\r\n\r\nbody\r\n    margin: 0\r\n    padding: 0\r\n    font-family: var(--font)\r\n    font-display: swap\r\n    background-color: var(--background)\r\n\r\n.container\r\n    max-width: 500px\r\n    margin-left: auto\r\n    margin-right: auto\r\n    padding: 12px\r\n    position: relative\r\n</style>\r\n\r\n<style lang=\"sass\" scoped>\r\n.chat-container\r\n    padding-top: 70px\r\n    padding-bottom: 125px\r\n</style>\r\n\r\n<script>\r\nimport Welcome from \"./Welcome.vue\";\r\n\r\nimport Error from \"@/Components/Parts/Error.vue\";\r\nimport TopHead from \"@/Components/Parts/TopHead.vue\";\r\nimport ChatInput from \"@/Components/Parts/ChatInput.vue\";\r\n\r\nimport RichComponent from \"@/Components/Rich/Component.vue\";\r\nimport Bubble from \"@/Components/Rich/Bubble.vue\";\r\nimport BubbleWrapper from \"@/Components/Rich/BubbleWrapper.vue\";\r\nimport Card from \"@/Components/Rich/Card.vue\";\r\nimport CardButton from \"@/Components/Rich/CardButton.vue\";\r\nimport Carousel from \"@/Components/Rich/Carousel.vue\";\r\nimport List from \"@/Components/Rich/List.vue\";\r\nimport ListItem from \"@/Components/Rich/ListItem.vue\";\r\nimport Picture from \"@/Components/Rich/Picture.vue\";\r\nimport Media from \"@/Components/Rich/Media.vue\";\r\nimport TableCard from \"@/Components/Rich/TableCard.vue\";\r\nimport Suggestion from \"@/Components/Rich/Suggestion.vue\";\r\n\r\nimport * as uuidv1 from \"uuid/v1\";\r\n\r\nimport { Client } from \"dialogflow-gateway\";\r\n\r\nfunction urlify(text) {\r\n  var urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi;\r\n  return text.replace(urlRegex, function (url) {\r\n    return '<a class=\"b\" href=\"' + url + '\" target=\"_blank\">' + url + \"</a>\";\r\n  });\r\n  // or alternatively\r\n  // return text.replace(urlRegex, '<a href=\"$1\">$1</a>')\r\n}\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    Welcome,\r\n    Error,\r\n    TopHead,\r\n    ChatInput,\r\n    RichComponent,\r\n    Bubble,\r\n    BubbleWrapper,\r\n    Card,\r\n    CardButton,\r\n    Carousel,\r\n    List,\r\n    ListItem,\r\n    Picture,\r\n    Media,\r\n    TableCard,\r\n    Suggestion,\r\n  },\r\n  data() {\r\n    return {\r\n      app: null,\r\n      messages: [],\r\n      language: \"\",\r\n      session: \"\",\r\n      muted: true,\r\n      loading: false,\r\n      error: null,\r\n      client: new new Client(this.config.endpoint).connect(),\r\n    };\r\n  },\r\n  computed: {\r\n    /* The code below is used to extract suggestions from last message, to display it on ChatInput */\r\n    suggestions() {\r\n      if (this.messages.length > 0) {\r\n        const last_message = this.messages[this.messages.length - 1];\r\n        const suggestions = [];\r\n\r\n        /* Dialogflow Suggestions */\r\n        for (const component in last_message.queryResult.fulfillmentMessages) {\r\n          if (\r\n            last_message.queryResult.fulfillmentMessages[component].suggestions\r\n          )\r\n            suggestions.text_suggestions = last_message.queryResult.fulfillmentMessages[\r\n              component\r\n            ].suggestions.suggestions.map((suggestion) => suggestion.title);\r\n          if (\r\n            last_message.queryResult.fulfillmentMessages[component]\r\n              .linkOutSuggestion\r\n          )\r\n            suggestions.link_suggestion =\r\n              last_message.queryResult.fulfillmentMessages[\r\n                component\r\n              ].linkOutSuggestion;\r\n          if (\r\n            last_message.queryResult.fulfillmentMessages[component].quickReplies\r\n          )\r\n            suggestions.text_suggestions =\r\n              last_message.queryResult.fulfillmentMessages[\r\n                component\r\n              ].quickReplies.quickReplies;\r\n        }\r\n\r\n        /* Google Suggestions */\r\n        if (\r\n          last_message.queryResult.webhookPayload &&\r\n          last_message.queryResult.webhookPayload.google\r\n        ) {\r\n          for (const component in last_message.queryResult.webhookPayload\r\n            .google) {\r\n            if (\r\n              last_message.queryResult.webhookPayload.google[component]\r\n                .suggestions\r\n            )\r\n              suggestions.text_suggestions = last_message.queryResult.webhookPayload.google[\r\n                component\r\n              ].suggestions.map((suggestion) => suggestion.title);\r\n            if (\r\n              last_message.queryResult.webhookPayload.google[component]\r\n                .linkOutSuggestion\r\n            )\r\n              suggestions.link_suggestion =\r\n                last_message.queryResult.webhookPayload.google[\r\n                  component\r\n                ].linkOutSuggestion;\r\n          }\r\n        }\r\n\r\n        return suggestions;\r\n      }\r\n\r\n      return {\r\n        text_suggestions: this.config.start_suggestions, // <- if no messages are present, return start_suggestions, from config.js to help user figure out what he can do with your application\r\n      };\r\n    },\r\n  },\r\n  watch: {\r\n    /* This function is triggered, when new messages arrive */\r\n    messages(messages) {\r\n      if (this.history())\r\n        sessionStorage.setItem(\"message_history\", JSON.stringify(messages)); // <- Save history if the feature is enabled\r\n    },\r\n    /* This function is triggered, when request is started or finished */\r\n    loading() {\r\n      setTimeout(() => {\r\n        const app = document.querySelector(\"#app\"); // <- We need to scroll down #app, to prevent the whole page jumping to bottom, when using in iframe\r\n        if (app.querySelector(\"#message\")) {\r\n          const message =\r\n            app.querySelectorAll(\"#message\")[\r\n              app.querySelectorAll(\"#message\").length - 1\r\n            ].offsetTop - 68;\r\n          window.scrollTo({ top: message, behavior: \"smooth\" });\r\n        }\r\n      }, 2); // <- wait for render (timeout) and then smoothly scroll #app down to the last message\r\n    },\r\n  },\r\n  created() {\r\n    /* If history is enabled, the messages are retrieved from sessionStorage */\r\n    if (this.history() && sessionStorage.getItem(\"message_history\") !== null) {\r\n      this.messages = JSON.parse(sessionStorage.getItem(\"message_history\"));\r\n    }\r\n\r\n    /* Session should be persistent (in case of page reload, the context should stay) */\r\n    if (this.history() && sessionStorage.getItem(\"session\") !== null) {\r\n      this.session = sessionStorage.getItem(\"session\");\r\n    } else {\r\n      this.session = uuidv1();\r\n      if (this.history()) sessionStorage.setItem(\"session\", this.session);\r\n    }\r\n\r\n    /* Cache Agent (this will save bandwith) */\r\n    if (this.history() && sessionStorage.getItem(\"agent\") !== null) {\r\n      this.app = JSON.parse(sessionStorage.getItem(\"agent\"));\r\n    } else {\r\n    }\r\n  },\r\n  methods: {\r\n    send(submission) {\r\n      let request;\r\n\r\n      /* Text request */\r\n      if (submission.text) {\r\n        request = {\r\n          session: this.session,\r\n          queryInput: {\r\n            text: {\r\n              text: submission.text,\r\n              languageCode: this.lang(),\r\n            },\r\n          },\r\n        };\r\n      } else if (submission.audio) {\r\n\r\n      /* Audio request */\r\n        request = {\r\n          session: this.session,\r\n          queryInput: {\r\n            audioConfig: {\r\n              audioEncoding: \"AUDIO_ENCODING_UNSPECIFIED\",\r\n              languageCode: this.lang(),\r\n            },\r\n          },\r\n          inputAudio: submission.audio,\r\n        };\r\n      }\r\n\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      /* Make the request to gateway */\r\n      this.client\r\n        .send(request)\r\n        .then((response) => {\r\n          if (response.queryResult.fulfillmentText) {\r\n            response.queryResult.fulfillmentText = urlify(\r\n              response.queryResult.fulfillmentText\r\n            );\r\n          }\r\n          this.messages.push(response);\r\n          this.handle(response); // <- trigger the handle function (explanation below)\r\n        })\r\n        .catch((error) => {\r\n          this.error = error.message;\r\n        })\r\n        .then(() => (this.loading = false));\r\n    },\r\n    handle(response) {\r\n      /* This function is used for speech output */\r\n      if (response.outputAudio) {\r\n        const output = new Audio(\r\n          `data:audio/mp3;base64,${response.outputAudio}`\r\n        );\r\n        output.onended = () => this.$refs.input.listen();\r\n\r\n        if (!this.muted) output.play();\r\n      } else {\r\n        let text; // <- init a text variable\r\n\r\n        /* Dialogflow Text/SimpleResponses */\r\n        for (const component in response.queryResult.fulfillmentMessages) {\r\n          if (response.queryResult.fulfillmentMessages[component].text)\r\n            text =\r\n              response.queryResult.fulfillmentMessages[component].text.text[0];\r\n          if (\r\n            response.queryResult.fulfillmentMessages[component].simpleResponses\r\n          )\r\n            text =\r\n              response.queryResult.fulfillmentMessages[component]\r\n                .simpleResponses.simpleResponses[0].textToSpeech;\r\n        }\r\n\r\n        /* Actions on Google Simple response */\r\n        if (\r\n          response.queryResult.webhookPayload &&\r\n          response.queryResult.webhookPayload.google\r\n        ) {\r\n          for (const component in response.queryResult.webhookPayload.google) {\r\n            if (\r\n              response.queryResult.webhookPayload.google[component]\r\n                .simpleResponse\r\n            )\r\n              text =\r\n                response.queryResult.webhookPayload.google[component]\r\n                  .simpleResponse.textToSpeech;\r\n          }\r\n        }\r\n\r\n        const speech = new SpeechSynthesisUtterance(text);\r\n        speech.voiceURI = this.config.voice;\r\n        speech.lang = this.lang();\r\n        speech.onend = () => this.$refs.input.listen();\r\n\r\n        if (!this.muted) window.speechSynthesis.speak(speech); // <- if app is not muted, speak out the speech\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/Views"}]}