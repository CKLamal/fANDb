{"remainingRequest":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\src\\Components\\Parts\\ChatInput.vue?vue&type=style&index=0&id=58da613a&lang=sass&scoped=true&","dependencies":[{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\src\\Components\\Parts\\ChatInput.vue","mtime":1626924492167},{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cklam\\Documents\\JHU-Covidbot-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICdAL1N0eWxlL01peGlucycNCg0KLmJvdHRvbWNoYXQNCiAgICBwb3NpdGlvbjogZml4ZWQNCiAgICBib3R0b206IDANCiAgICBsZWZ0OiAwDQogICAgd2lkdGg6IDEwMCUNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kKQ0KICAgIHBhZGRpbmctYm90dG9tOiA4cHgNCg0KLmZsZXhpYmxlDQogICAgZGlzcGxheTogZmxleA0KDQouc3VnZ2VzdGlvbnMNCiAgICBvdmVyZmxvdy14OiBzY3JvbGwNCiAgICBvdmVyZmxvdy15OiBoaWRkZW4NCiAgICB3aGl0ZS1zcGFjZTogbm93cmFwDQogICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoDQoNCiAgICAmOjotd2Via2l0LXNjcm9sbGJhcg0KICAgICAgICBkaXNwbGF5OiBub25lDQoNCi5pbnB1dA0KICAgIG1hcmdpbi1sZWZ0OiA1cHgNCiAgICBmb250LXNpemU6IDE2cHgNCiAgICBmb250LXdlaWdodDogNTAwDQogICAgd2lkdGg6IDEwMCUNCiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94DQogICAgYm9yZGVyOiBub25lDQogICAgcGFkZGluZzogMTBweCAxMnB4DQogICAgY29sb3I6IHZhcigtLXRleHQpDQogICAgYm9yZGVyLXJhZGl1czogNDBweA0KICAgIGZsZXg6IDEgMCAwDQogICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZWxlbWVudC1iYWNrZ3JvdW5kKQ0KDQogICAgJjpmb2N1cw0KICAgICAgICBvdXRsaW5lOiAwICFpbXBvcnRhbnQNCg0KLmJ1dHRvbg0KICAgIEBpbmNsdWRlIHJlc2V0DQogICAgcGFkZGluZzogOHB4DQogICAgbWFyZ2luLWxlZnQ6IDZweA0KICAgIG1hcmdpbi1yaWdodDogNXB4DQogICAgYm9yZGVyLXJhZGl1czogNTAlDQogICAgY3Vyc29yOiBwb2ludGVyDQogICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZWxlbWVudC1iYWNrZ3JvdW5kKQ0KICAgIGNvbG9yOiB2YXIoLS10ZXh0KQ0KICAgIGZvbnQtc2l6ZTogMjRweA0KICAgIGRpc3BsYXk6IGZsZXgNCg0KICAgICY6Zm9jdXMNCiAgICAgICAgb3V0bGluZTogMCAhaW1wb3J0YW50DQoNCiAgICAmLm1pY19hY3RpdmUNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0Y0NDMzNg0KICAgICAgICBjb2xvcjogd2hpdGUNCg=="},{"version":3,"sources":["ChatInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"ChatInput.vue","sourceRoot":"src/Components/Parts","sourcesContent":["<template>\r\n  <div class=\"bottomchat\">\r\n    <div class=\"container\">\r\n      <!-- Here are the suggestions -->\r\n      <div class=\"suggestions\"><slot /></div>\r\n      <div class=\"flexible\">\r\n        <!-- Text input -->\r\n        <input\r\n          v-model=\"query\"\r\n          class=\"input\"\r\n          type=\"text\"\r\n          autofocus\r\n          :placeholder=\"\r\n            (translations[lang()] && translations[lang()].inputTitle) ||\r\n            translations[config.fallback_lang].inputTitle\r\n          \"\r\n          :aria-label=\"\r\n            (translations[lang()] && translations[lang()].inputTitle) ||\r\n            translations[config.fallback_lang].inputTitle\r\n          \"\r\n          @keypress.enter=\"submit({ text: query })\"\r\n          @focus=\"\r\n            microphone = false;\r\n            should_listen = false;\r\n          \"\r\n        />\r\n\r\n        <!-- Send message button (arrow button) v-if=\"(!microphone && query.length > 0) || !microphone_supported\" -->\r\n        <button\r\n          \r\n          class=\"button\"\r\n          :title=\"\r\n            (translations[lang()] && translations[lang()].sendTitle) ||\r\n            translations[config.fallback_lang].sendTitle\r\n          \"\r\n          :aria-label=\"\r\n            (translations[lang()] && translations[lang()].sendTitle) ||\r\n            translations[config.fallback_lang].sendTitle\r\n          \"\r\n          @click=\"submit({ text: query })\"\r\n        >\r\n          <i class=\"material-icons\" aria-hidden=\"true\">arrow_upward</i>\r\n        </button>\r\n\r\n        <!-- Microphone Button -->\r\n        <!-- <button\r\n          v-else\r\n          class=\"button\"\r\n          :aria-label=\"\r\n            (translations[lang()] && translations[lang()].microphoneTitle) ||\r\n            translations[config.fallback_lang].microphoneTitle\r\n          \"\r\n          :title=\"\r\n            (translations[lang()] && translations[lang()].microphoneTitle) ||\r\n            translations[config.fallback_lang].microphoneTitle\r\n          \"\r\n          :class=\"{ mic_active: microphone }\"\r\n          @click=\"microphone = !microphone\"\r\n        \r\n          <i class=\"material-icons\" aria-hidden=\"true\">mic</i>\r\n        </button> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"sass\" scoped>\r\n@import '@/Style/Mixins'\r\n\r\n.bottomchat\r\n    position: fixed\r\n    bottom: 0\r\n    left: 0\r\n    width: 100%\r\n    background-color: var(--background)\r\n    padding-bottom: 8px\r\n\r\n.flexible\r\n    display: flex\r\n\r\n.suggestions\r\n    overflow-x: scroll\r\n    overflow-y: hidden\r\n    white-space: nowrap\r\n    -webkit-overflow-scrolling: touch\r\n\r\n    &::-webkit-scrollbar\r\n        display: none\r\n\r\n.input\r\n    margin-left: 5px\r\n    font-size: 16px\r\n    font-weight: 500\r\n    width: 100%\r\n    box-sizing: border-box\r\n    border: none\r\n    padding: 10px 12px\r\n    color: var(--text)\r\n    border-radius: 40px\r\n    flex: 1 0 0\r\n    background-color: var(--element-background)\r\n\r\n    &:focus\r\n        outline: 0 !important\r\n\r\n.button\r\n    @include reset\r\n    padding: 8px\r\n    margin-left: 6px\r\n    margin-right: 5px\r\n    border-radius: 50%\r\n    cursor: pointer\r\n    background-color: var(--element-background)\r\n    color: var(--text)\r\n    font-size: 24px\r\n    display: flex\r\n\r\n    &:focus\r\n        outline: 0 !important\r\n\r\n    &.mic_active\r\n        background-color: #F44336\r\n        color: white\r\n</style>\r\n\r\n<script>\r\nimport AudioRecorder from \"audio-recorder-polyfill\";\r\nimport * as hark from \"hark\";\r\nwindow.MediaRecorder = AudioRecorder;\r\n\r\nexport default {\r\n  name: \"ChatInput\",\r\n  data() {\r\n    return {\r\n      query: \"\",\r\n      microphone: false,\r\n      recognition: null,\r\n      recorder: null,\r\n      should_listen: false,\r\n    };\r\n  },\r\n  computed: {\r\n    // microphone_supported() {\r\n    //   return (\r\n    //     window.webkitSpeechRecognition ||\r\n    //     window.SpeechRecognition ||\r\n    //     !window.MediaRecorder.notSupported\r\n    //   );\r\n    // },\r\n  },\r\n  watch: {\r\n    /* Toggle microphone */\r\n    // microphone(activate) {\r\n    //   if (activate) {\r\n    //     this.should_listen = true;\r\n    //     if (window.webkitSpeechRecognition || window.SpeechRecognition) {\r\n    //       this.recognition =\r\n    //         new window.webkitSpeechRecognition() ||\r\n    //         new window.SpeechRecognition();\r\n    //       this.recognition.interimResults = true;\r\n    //       this.recognition.lang = this.lang();\r\n    //       this.recognition.onresult = (event) => {\r\n    //         for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n    //           this.query = event.results[i][0].transcript; // <- push results to the Text input\r\n    //         }\r\n    //       };\r\n    //       this.recognition.onend = () => {\r\n    //         this.recognition.stop();\r\n    //         this.microphone = false;\r\n    //         this.submit({ text: this.query }); // <- submit the result\r\n    //       };\r\n    //       this.recognition.onerror = () => (this.microphone = false);\r\n    //       this.recognition.start();\r\n    //     } else if (window.MediaRecorder) {\r\n    //       if (window.MediaRecorder) {\r\n    //         navigator.mediaDevices\r\n    //           .getUserMedia({ audio: true })\r\n    //           .then((stream) => {\r\n    //             this.recorder = new window.MediaRecorder(stream);\r\n    //             this.recorder.addEventListener(\"dataavailable\", (recording) => {\r\n    //               const reader = new FileReader();\r\n    //               reader.readAsDataURL(recording.data);\r\n    //               reader.onloadend = () => {\r\n    //                 this.submit({\r\n    //                   audio: reader.result.replace(/^data:.+;base64,/, \"\"),\r\n    //                 });\r\n    //               };\r\n    //             });\r\n    //             hark(this.recorder.stream).on(\r\n    //               \"stopped_speaking\",\r\n    //               () => (this.microphone = false)\r\n    //             ); // <- Speech end detection\r\n    //             this.recorder.start();\r\n    //           })\r\n    //           .catch(() => (this.microphone = false));\r\n    //       }\r\n    //     }\r\n    //   } else if (this.recognition) this.recognition.abort();\r\n    //   else if (this.recorder) this.recorder.stop();\r\n    // },\r\n  },\r\n  methods: {\r\n    listen() {\r\n      // if (this.should_listen) this.microphone = true;\r\n    },\r\n    submit(submission) {\r\n      if (submission.text && submission.text.length > 0) {\r\n        this.$emit(\"submit\", submission);\r\n        this.query = \"\";\r\n      } \r\n      // else if (submission.audio) this.$emit(\"submit\", submission);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]}]}